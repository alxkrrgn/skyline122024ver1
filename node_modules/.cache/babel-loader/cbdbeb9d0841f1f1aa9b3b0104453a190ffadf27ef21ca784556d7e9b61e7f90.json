{"ast":null,"code":"import _objectSpread from\"/home/alex/skylineGhVer1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import'../styles/style-loggedin.css';import'../styles/loginform.css';import'../styles/buttons.css';import FormData from\"form-data\";import axios from'axios';//import mailer from '../config/mailer';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ContactGit=()=>{const[formData,setFormData]=useState({email:'',name:'',subject:'',message:''});const[validationMessage,setValidationMessage]=useState({text:'',type:''});const[serverMessage,setServerMessage]=useState({text:'',type:''});//const validateEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\nconst validateEmail=email=>{return email.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);};const handleChange=e=>{const{name,value}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));if(name==='email'){const isValid=validateEmail(value);setValidationMessage({text:isValid?'Valid Email':'Invalid Email',type:isValid?'success':'error'});}};const handleSubmit=async e=>{e.preventDefault();if(formData.email===''){setServerMessage({text:'Please enter your email:',type:'error'});return;}if(formData.subject===''){setServerMessage({text:'Please tyoe a subject:',type:'error'});return;}if(formData.name===''){setServerMessage({text:'Please enter your name:',type:'error'});return;}if(formData.message!==formData.message){setServerMessage({text:'Please type a message:',type:'error'});return;}try{const postData=new FormData();postData.append('email',formData.email);postData.append('name',formData.name);postData.append('subject',formData.subject);postData.append('message',formData.message);console.log('Post data:',Object.fromEntries(postData.entries()));const response=await fetch('http://localhost/contactGit.php',{method:'POST',body:postData// Let the browser handle Content-Type\n});console.log('Response status:',response.status);// Check for server-side errors\nif(!response.ok){console.error('Server returned an error:',response.statusText);setServerMessage({text:'Server error occurred.',type:'error'});return;}// Parse JSON response\n// Parse JSON response\nconst rawText=await response.text();// Log raw response\nconsole.log('Raw response:',rawText);const data=JSON.parse(rawText);// Parse JSON\nconsole.log('Parsed response:',data);console.log('Response data:',data);if(data.success){setServerMessage({text:data.message,type:'success'});/*\n              localStorage.setItem('userData', JSON.stringify(data.userData));\n              setTimeout(() => {\n                  navigate(data.redirect); // Redirect to the dashboard\n              }, 2000); */// if (data.redirect) {\n//   window.location.href = data.redirect; // Navigate to /dashboard\n//    }\n}else{setServerMessage({text:data.error,type:'error'});}}catch(error){console.error('Error:',error);setServerMessage({text:'An error occurred during login.',type:'error'});}};return/*#__PURE__*/_jsx(\"div\",{style:{margin:'5vh 0'},children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-panel one\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-header\",children:/*#__PURE__*/_jsx(\"h1\",{style:{textShadow:'none'},children:\"Contact Us\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-content\",children:[/*#__PURE__*/_jsx(\"div\",{children:serverMessage.type==='success'?/*#__PURE__*/_jsx(\"h3\",{className:serverMessage.type,dangerouslySetInnerHTML:{__html:serverMessage.text}}):/*#__PURE__*/_jsx(\"h3\",{className:serverMessage.type,children:serverMessage.text})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",placeholder:\"Email...\",value:formData.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"h3\",{className:validationMessage.type,children:validationMessage.text})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"name\",id:\"name\",name:\"name\",placeholder:\"Name...\",value:formData.name,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"subject\",children:\"Subject\"}),/*#__PURE__*/_jsx(\"input\",{type:\"subject\",id:\"subject\",name:\"subject\",placeholder:\"Subject...\",value:formData.subject,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"message\",children:\"Message\"}),/*#__PURE__*/_jsx(\"textarea\",{style:{width:'100%'},id:\"message\",name:\"message\",placeholder:\"Your Message Here...\",rows:\"5\",value:formData.message,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})})]})]})]})})})});};export default ContactGit;","map":{"version":3,"names":["React","useState","FormData","axios","jsx","_jsx","jsxs","_jsxs","ContactGit","formData","setFormData","email","name","subject","message","validationMessage","setValidationMessage","text","type","serverMessage","setServerMessage","validateEmail","match","handleChange","e","value","target","_objectSpread","isValid","handleSubmit","preventDefault","postData","append","console","log","Object","fromEntries","entries","response","fetch","method","body","status","ok","error","statusText","rawText","data","JSON","parse","success","style","margin","children","className","textShadow","dangerouslySetInnerHTML","__html","onSubmit","htmlFor","id","placeholder","onChange","width","rows","required"],"sources":["/home/alex/skylineGhVer1/src/components/ContactGit.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/style-loggedin.css';\nimport '../styles/loginform.css';\nimport '../styles/buttons.css';\nimport FormData from \"form-data\";\nimport axios from 'axios';\n//import mailer from '../config/mailer';\n\nconst ContactGit = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        name: '',\n        subject: '',\n        message: '',\n    });\n\n    const [validationMessage, setValidationMessage] = useState({ text: '', type: '' });\n    const [serverMessage, setServerMessage] = useState({ text: '', type: '' });\n\n    //const validateEmail = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n    const validateEmail = (email) => {\n        return email.match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        );\n      };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n\n        if (name === 'email') {\n            const isValid = validateEmail(value);\n            setValidationMessage({\n                text: isValid ? 'Valid Email' : 'Invalid Email',\n                type: isValid ? 'success' : 'error',\n            });\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (formData.email === '' ) {\n            setServerMessage({ text: 'Please enter your email:', type: 'error' });\n            return;\n        }\n\n        if (formData.subject === '' ) {\n            setServerMessage({ text: 'Please tyoe a subject:', type: 'error' });\n            return;\n        }\n        if (formData.name === '' ) {\n          setServerMessage({ text: 'Please enter your name:', type: 'error' });\n          return;\n        }\n\n        if (formData.message !== formData.message) {\n            setServerMessage({ text: 'Please type a message:', type: 'error' });\n            return;\n        }\n\n        try {\n            const postData = new FormData();\n            postData.append('email', formData.email);\n            postData.append('name', formData.name);\n            postData.append('subject', formData.subject);\n            postData.append('message', formData.message);\n        \n            console.log('Post data:', Object.fromEntries(postData.entries()));\n\n\n            const response = await fetch('http://localhost/contactGit.php', {\n                method: 'POST',\n                body: postData, // Let the browser handle Content-Type\n            });\n\n            console.log('Response status:', response.status);\n        \n             // Check for server-side errors\n             if (!response.ok) {\n                console.error('Server returned an error:', response.statusText);\n                setServerMessage({ text: 'Server error occurred.', type: 'error' });\n                return;\n            }\n        \n            // Parse JSON response\n             // Parse JSON response\n\n\n            const rawText = await response.text(); // Log raw response\n            console.log('Raw response:', rawText);\n\n            const data = JSON.parse(rawText); // Parse JSON\n            console.log('Parsed response:', data);\n\n            console.log('Response data:', data);\n\n            if (data.success) {\n              setServerMessage({ text: data.message, type: 'success' });\n              /*\n              localStorage.setItem('userData', JSON.stringify(data.userData));\n              setTimeout(() => {\n                  navigate(data.redirect); // Redirect to the dashboard\n              }, 2000); */\n            // if (data.redirect) {\n           //   window.location.href = data.redirect; // Navigate to /dashboard\n                  //    }\n               } else {\n                   setServerMessage({ text: data.error, type: 'error' });\n               }\n           } catch (error) {\n                  console.error('Error:', error);\n                   setServerMessage({\n                  text: 'An error occurred during login.',\n                  type: 'error',\n             });\n          }\n        };\n\n    return (\n    <div style ={{ margin : '5vh 0' }} >\n        <div className=\"container\">\n            <div className=\"form\">\n                <div className=\"form-panel one\">\n                    <div className=\"form-header\">\n                        <h1 style={{ textShadow: 'none' }}>Contact Us</h1>\n                    </div>\n                    <div className=\"form-content\">\n                       {/* <h3 className={serverMessage.type}>{serverMessage.text}</h3> */}\n                        <div>\n                            {serverMessage.type === 'success' ? (\n                        <h3\n                                className={serverMessage.type}\n                                dangerouslySetInnerHTML={{ __html: serverMessage.text }}\n                        ></h3>\n                            ) : (\n                        <h3 className={serverMessage.type}>{serverMessage.text}</h3>\n                                )}\n                        </div>\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input\n                                    type=\"email\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Email...\"\n                                    value={formData.email}\n                                    onChange={handleChange}\n                                />\n                                <h3 className={validationMessage.type}>{validationMessage.text}</h3>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"name\">Name</label>\n                                <input\n                                    type=\"name\"\n                                    id=\"name\"\n                                    name=\"name\"\n                                    placeholder=\"Name...\"\n                                    value={formData.name}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"subject\">Subject</label>\n                                <input\n                                    type=\"subject\"\n                                    id=\"subject\"\n                                    name=\"subject\"\n                                    placeholder=\"Subject...\"\n                                    value={formData.subject}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"message\">Message</label>\n                                  <textarea style ={{ width : '100%' }}\n                                    id=\"message\"\n                                    name=\"message\"\n                                    placeholder=\"Your Message Here...\"\n                                    rows=\"5\"\n                                    value={formData.message}\n                                    onChange={handleChange}\n                                    required\n                                ></textarea>\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\">Send</button>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n};\n\nexport default ContactGit;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}